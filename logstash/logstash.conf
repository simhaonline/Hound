input {
  file {
    path => "/usr/share/logstash/data-ingest/*.json"
    # path => "/usr/share/logstash/data-ingest/202*/*/*.DAT"
    start_position => "beginning"
    codec => json
    sincedb_path => "/dev/null"
    # max_open_files => 7000
  }
  
}

filter {
  if[location] {
    mutate {
      convert => {
        "[location][lat]" => "float"
        "[location][lng]" => "float"
      }
    }
  }
  
  # dissect {
  #   mapping => {
  #     "path" => "/usr/share/logstash/data-ingest/%{year}/%{dir}/%{filename}"
  #   }
  # }
  # dissect {
  #   mapping => {
  #       "message" => "%{type};%{data}}"
  #     }
  # }
  # if ([type]){
  #   if [type] == "A" {
  #     dissect {
  #       mapping => {
  #         "data" => "%{fileType};%{districtCode};%{date-created};%{userid};"
  #       }
  #     }
  #     date {
  #       match => ["date-created","yyyyMMdd HH:mm"]
  #       target => "date-created"
  #     }
  #   }
  #   if[type] == "B" {
  #     dissect {
  #       mapping => {
  #         "data" => "%{districtCode};%{propId};%{saleCount};%{date-created};%{propName};%{propUnitNum};%{propHouseNum};%{propStreetName};%{suburb};%{postCode};%{area};%{areaType};%{contractDate};%{settleDate};%{purchasePrice};%{zoning};%{natureProp};%{propType};%{strataLot};%{compCode};%{saleCode};%{intSale};%{dealNum};"
  #       }
  #     }
  #     date {
  #       match => ["contractDate","yyyyMMdd"]
  #       target => "contractDate"
  #     }
  #     date {
  #       match => ["settleDate","yyyyMMdd"]
  #       target => "settleDate"
  #     }
  #     date {
  #       match => ["date-created","yyyyMMdd HH:mm"]
  #       target => "date-created"
  #     }

      
  #   }
  #   if[type] == "C" {
  #     dissect {
  #       mapping => {
  #         "data" => "%{districtCode};%{propId};%{saleCount};%{date-created};%{propLegal};"
  #       }
  #     }
  #     date {
  #       match => ["date-created","yyyyMMdd HH:mm"]
  #       target => "date-created"
  #     }
  #   }

  #   if[type] == "D" {
  #     dissect {
  #       mapping => {
  #         "data" => "%{districtCode};%{propId};%{saleCount};%{date-created};%{vendor};;;;;;"
  #       }
  #     }
  #     date {
  #       match => ["date-created","yyyyMMdd HH:mm"]
  #       target => "date-created"
  #     }
  #   }

  #   if[type] == "Z" {
  #     dissect {
  #       mapping => {
  #         "data" => "%{totRecords};%{B-records};%{C-records};%{D-records};"
  #       }
  #     }
  #   }

  # }
  # # drop {
  # #   remove_field => [ "data", "message" ]
  # # }
}


output {
  elasticsearch {
    hosts => ["odfe-node1:9200"]
    index => "hound-aus"
    user => "admin"
    password => "admin"
    ssl => false
    ssl_certificate_verification => false
  }
  stdout { codec => rubydebug }
}